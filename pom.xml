<?xml version="1.0" encoding="UTF-8"?>
<!--
    Licensed to the Apache Software Foundation (ASF) under one
    or more contributor license agreements.  See the NOTICE file
    distributed with this work for additional information
    regarding copyright ownership.  The ASF licenses this file
    to you under the Apache License, Version 2.0 (the
    "License"); you may not use this file except in compliance
    with the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <name>Apache MyFaces Trinidad 1.2</name>
  <description>Apache MyFaces Trinidad for JSF 1.2</description>
  <url>http://myfaces.apache.org/trinidad/trinidad-1_2</url>
  <inceptionYear>2001</inceptionYear>

  <parent>
    <groupId>org.apache.myfaces</groupId>
    <artifactId>myfaces</artifactId>
    <version>6</version>
  </parent>

  <groupId>org.apache.myfaces.trinidad</groupId>
  <artifactId>trinidad</artifactId>
  <version>1.2.13-SNAPSHOT</version>
  <packaging>pom</packaging>

  <properties>
    <!-- Standards -->
    <jdk.version>1.5</jdk.version>    
    <servlet.version>2.5</servlet.version>
    <portlet.version>2.0</portlet.version>
    <jsp.version>2.1</jsp.version>
    <jstl.version>1.2</jstl.version>
    <jsf-spec.version>1.2</jsf-spec.version>
    <jsf-ri.version>1.2_09</jsf-ri.version>
    <jsf-myfaces.version>1.2.4</jsf-myfaces.version>
    <jsf-facelets.version>1.1.14</jsf-facelets.version>
    <portlet-bridge.version>1.0.0-beta</portlet-bridge.version>
    <commons-lang.version>2.4</commons-lang.version>
    <pluto-embedded.version>1.0.1</pluto-embedded.version>
    
    <!-- Testing -->
    <shale.version>1.0.5</shale.version>
    <jmock.version>1.2.0</jmock.version>
    <junit.version>4.4</junit.version>
    
    <!-- Plugins -->
    <trinidad-plugins.version>1.2.11</trinidad-plugins.version>
    <wagon-plugin.version>1.0.6</wagon-plugin.version>
    <jetty-plugin.version>6.1.16</jetty-plugin.version>
    <pluto.version>1.1.6</pluto.version>
    <pluto.package>org.apache.pluto</pluto.package>
    
    <!-- Other -->
    <jdev.release>11.1.1.0.0</jdev.release>
  </properties>

  <issueManagement>
    <system>jira</system>
    <url>http://issues.apache.org/jira/browse/TRINIDAD</url>
  </issueManagement>

  <ciManagement>
    <system>continuum</system>
    <url>http://myfaces.zones.apache.org:8080/continuum</url>
    <notifiers>
      <notifier>
        <type>mail</type>
        <sendOnSuccess>true</sendOnSuccess>
        <configuration>
          <address>commits@myfaces.apache.org</address>
        </configuration>
      </notifier>
    </notifiers>
  </ciManagement>

  <mailingLists>
    <mailingList>
      <name>MyFaces Users (use [Trinidad] prefix)</name>
      <post>users@myfaces.apache.org</post>
      <subscribe>users-subscribe@myfaces.apache.org</subscribe>
      <unsubscribe>users-unsubscribe@myfaces.apache.org</unsubscribe>
      <archive>http://mail-archives.apache.org/mod_mbox/myfaces-users</archive>
      <otherArchives>
        <otherArchive>http://users.myfaces.markmail.org/</otherArchive>
        <otherArchive>http://www.mail-archive.com/users@myfaces.apache.org/</otherArchive>
        <otherArchive>http://www.nabble.com/MyFaces---Users-f181.html</otherArchive>
      </otherArchives>
    </mailingList>
    <mailingList>
      <name>MyFaces Developers (use [Trinidad] prefix)</name>
      <post>dev@myfaces.apache.org</post>
      <subscribe>dev-subscribe@myfaces.apache.org</subscribe>
      <unsubscribe>dev-unsubscribe@myfaces.apache.org</unsubscribe>
      <archive>http://mail-archives.apache.org/mod_mbox/myfaces-dev</archive>
      <otherArchives>
        <otherArchive>http://dev.myfaces.markmail.org/</otherArchive>
        <otherArchive>http://www.mail-archive.com/dev@myfaces.apache.org/</otherArchive>
        <otherArchive>http://www.nabble.com/My-Faces---Dev-f182.html</otherArchive>
      </otherArchives>
    </mailingList>
    <mailingList>
      <name>MyFaces issues</name>
      <post>Do not post</post>
      <subscribe>issues-subscribe@myfaces.apache.org</subscribe>
      <unsubscribe>issues-unsubscribe@myfaces.apache.org</unsubscribe>
      <archive>http://mail-archives.apache.org/mod_mbox/myfaces-dev</archive>
      <otherArchives>
        <otherArchive>http://dev.myfaces.markmail.org/</otherArchive>
        <otherArchive>http://www.mail-archive.com/dev@myfaces.apache.org/</otherArchive>
        <otherArchive>http://www.nabble.com/My-Faces---Dev-f182.html</otherArchive>
      </otherArchives>
    </mailingList>
    <mailingList>
      <name>MyFaces commits</name>
      <post>Do not post</post>
      <subscribe>commits-subscribe@myfaces.apache.org</subscribe>
      <unsubscribe>commits-unsubscribe@myfaces.apache.org</unsubscribe>
      <archive>http://mail-archives.apache.org/mod_mbox/myfaces-commits</archive>
      <otherArchives>
        <otherArchive>http://commits.myfaces.markmail.org/</otherArchive>
      </otherArchives>
    </mailingList>
  </mailingLists>

  <scm>
    <connection>scm:svn:http://svn.apache.org/repos/asf/myfaces/trinidad/trunk/</connection>
    <developerConnection>scm:svn:https://svn.apache.org/repos/asf/myfaces/trinidad/trunk/</developerConnection>
    <url>http://svn.apache.org/viewcvs.cgi/myfaces/trinidad/trunk/</url>
  </scm>

  <repositories>
    <!--Fixme: This repository is pretty bad.  We should move require artifacts to repo1. -->
    <repository>
      <id>java.net</id>
      <url>http://download.java.net/maven/1</url>
      <layout>legacy</layout>
    </repository>
    <repository>
      <id>apache.snapshots</id>
      <name>Apache Snapshot Repository</name>
      <url>http://people.apache.org/repo/m2-snapshot-repository</url>
    </repository>
  </repositories>

  <pluginRepositories>
    <pluginRepository>
      <id>apache.snapshots</id>
      <name>Apache Snapshot Repository</name>
      <url>http://people.apache.org/repo/m2-snapshot-repository</url>
    </pluginRepository>
  </pluginRepositories>

  <distributionManagement>
    <site>
      <id>apache-site</id>
      <name>Apache Website</name>
      <url>scpexe://minotaur.apache.org/www/myfaces.apache.org/trinidad</url>
    </site>
    <snapshotRepository>
      <uniqueVersion>false</uniqueVersion>
      <id>apache-maven-snapshots</id>
      <name>Apache Maven Snapshot Repository</name>
      <url>scpexe://minotaur.apache.org/www/people.apache.org/repo/m2-snapshot-repository</url>
    </snapshotRepository>
  </distributionManagement>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>javax.servlet</groupId>
        <artifactId>servlet-api</artifactId>
        <version>${servlet.version}</version>
        <scope>provided</scope>
      </dependency>

      <dependency>
        <groupId>javax.servlet</groupId>
        <artifactId>jstl</artifactId>
        <version>${jstl.version}</version>
        <scope>provided</scope>
      </dependency>

      <dependency>
        <groupId>javax.servlet.jsp</groupId>
        <artifactId>jsp-api</artifactId>
        <version>${jsp.version}</version>
        <scope>provided</scope>
      </dependency>

      <dependency>
        <groupId>javax.portlet</groupId>
        <artifactId>portlet-api</artifactId>
        <version>${portlet.version}</version>
        <scope>provided</scope>
      </dependency>
      
      <dependency>
        <groupId>javax.faces</groupId>
        <artifactId>jsf-api</artifactId>
        <version>${jsf-ri.version}</version>
        <scope>provided</scope>
      </dependency>

      <dependency>
        <groupId>javax.faces</groupId>
        <artifactId>jsf-impl</artifactId>
        <version>${jsf-ri.version}</version>
        <scope>provided</scope>
      </dependency>

      <dependency>
        <groupId>org.apache.myfaces.core</groupId>
        <artifactId>myfaces-api</artifactId>
        <version>${jsf-myfaces.version}</version>
        <scope>provided</scope>
      </dependency>

      <dependency>
        <groupId>org.apache.myfaces.core</groupId>
        <artifactId>myfaces-impl</artifactId>
        <version>${jsf-myfaces.version}</version>
        <scope>provided</scope>
      </dependency>

      <dependency>
        <groupId>org.apache.myfaces.portlet-bridge</groupId>
        <artifactId>portlet-bridge-api</artifactId>
        <version>${portlet-bridge.version}</version>
        <scope>provided</scope>
      </dependency>
      
      <dependency>
        <!-- If the impl is needed, it should always be added in -->
        <groupId>org.apache.myfaces.portlet-bridge</groupId>
        <artifactId>portlet-bridge-impl</artifactId>
        <version>${portlet-bridge.version}</version>
        <scope>provided</scope>
      </dependency>
      
      <dependency>
        <groupId>com.sun.facelets</groupId>
        <artifactId>jsf-facelets</artifactId>
        <version>${jsf-facelets.version}</version>
        <scope>provided</scope>
      </dependency>

      <dependency>
        <groupId>commons-lang</groupId>
        <artifactId>commons-lang</artifactId>
        <version>${commons-lang.version}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.myfaces.trinidad</groupId>
        <artifactId>trinidad-build</artifactId>
        <version>${pom.version}</version>
        <scope>provided</scope>
      </dependency>

      <dependency>
        <groupId>org.apache.myfaces.trinidad</groupId>
        <artifactId>trinidad-api</artifactId>
        <version>${pom.version}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.myfaces.trinidad</groupId>
        <artifactId>trinidad-impl</artifactId>
        <version>${pom.version}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.myfaces.trinidad</groupId>
        <artifactId>trinidad-api</artifactId>
        <version>${pom.version}</version>
        <type>test-jar</type>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.apache.shale</groupId>
        <artifactId>shale-test</artifactId>
        <version>${shale.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>jmock</groupId>
        <artifactId>jmock</artifactId>
        <version>${jmock.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>jmock</groupId>
        <artifactId>jmock-cglib</artifactId>
        <version>${jmock.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>${junit.version}</version>
        <scope>test</scope>
      </dependency>
      
      <dependency>
        <groupId>com.bekk.boss</groupId>
        <artifactId>maven-jetty-pluto-embedded</artifactId>
        <version>${pluto-embedded.version}</version>
      </dependency>
      <dependency>
        <groupId>${pluto.package}</groupId>
        <artifactId>pluto-util</artifactId>
        <version>${pluto.version}</version>
        <scope>provided</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <modules>
    <module>trinidad-build</module>
    <module>trinidad-api</module>
    <module>trinidad-impl</module>
  </modules>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <artifactId>maven-site-plugin</artifactId>
          <inherited>true</inherited>
          <configuration>
            <outputEncoding>UTF-8</outputEncoding>
          </configuration>
        </plugin>

        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <inherited>true</inherited>
          <configuration>
            <!-- set the forkMode to "always" to validate new tests,
              and "never" otherwise for performance -->
            <forkMode>never</forkMode>
            <parallel>true</parallel>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.myfaces.maven</groupId>
          <artifactId>wagon-maven-plugin</artifactId>
          <version>${wagon-plugin.version}</version>
          <inherited>true</inherited>
          <configuration>
            <id>myfaces-nightly-builds</id>
            <url>scpexe://minotaur.apache.org/www/people.apache.org/builds/myfaces/nightly</url>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.myfaces.trinidadbuild</groupId>
          <artifactId>maven-xrts-plugin</artifactId>
          <version>${trinidad-plugins.version}</version>
          <inherited>true</inherited>
        </plugin>
        
        <plugin>
          <groupId>org.apache.myfaces.trinidadbuild</groupId>
          <artifactId>maven-faces-plugin</artifactId>
          <version>${trinidad-plugins.version}</version>
          <inherited>true</inherited>
          <configuration>
            <force>true</force>
            <jsfVersion>${jsf-spec.version}</jsfVersion>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.myfaces.trinidadbuild</groupId>
          <artifactId>maven-jdev-plugin</artifactId>
          <version>${trinidad-plugins.version}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.myfaces.trinidadbuild</groupId>
          <artifactId>maven-i18n-plugin</artifactId>
          <version>${trinidad-plugins.version}</version>
          <inherited>true</inherited>
        </plugin>

        <plugin>
          <groupId>org.apache.myfaces.trinidadbuild</groupId>
          <artifactId>maven-javascript-plugin</artifactId>
          <version>${trinidad-plugins.version}</version>
          <inherited>true</inherited>
        </plugin>

        <plugin>
          <groupId>org.apache.myfaces.trinidadbuild</groupId>
          <artifactId>maven-tagdoc-plugin</artifactId>
          <version>${trinidad-plugins.version}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <inherited>true</inherited>
          <configuration>
            <source>${jdk.version}</source>
            <target>${jdk.version}</target>
            <!--
            <showWarnings>true</showWarnings>
            <compilerArgument>-Xlint:all,-serial,-fallthrough</compilerArgument>
            -->
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-pmd-plugin</artifactId>
          <inherited>true</inherited>
          <configuration>
            <targetJdk>${jdk.version}</targetJdk>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <configuration>
            <source>${jdk.version}</source>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <inherited>true</inherited>
          <configuration>
            <filtering>false</filtering>
          </configuration>
        </plugin>

        <plugin>
            <artifactId>maven-source-plugin</artifactId>
            <executions>
                <execution>
                    <id>attach-source</id>
                    <goals>
                        <goal>jar</goal>
                    </goals>
                </execution>
            </executions>
        </plugin>

        <plugin>
          <groupId>org.mortbay.jetty</groupId>
          <artifactId>maven-jetty-plugin</artifactId>
          <version>${jetty-plugin.version}</version>
        </plugin>

        <plugin>
          <groupId>${pluto.package}</groupId>
          <artifactId>maven-pluto-plugin</artifactId>
          <version>${pluto.version}</version>
          <executions>  
            <execution>  
              <phase>generate-resources</phase>  
              <goals>  
                <goal>assemble</goal>  
              </goals>  
            </execution>  
          </executions>  
        </plugin>  

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-idea-plugin</artifactId>
          <configuration>
            <jdkName>${maven.compile.source}</jdkName>
            <linkModules>true</linkModules>
            <downloadSources>true</downloadSources>
            <jdkLevel>5.0</jdkLevel>
          </configuration>
        </plugin>
        
      </plugins>
    </pluginManagement>
    
    <plugins>
      <!-- force generating a *-sources.jar when building a jar -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <executions>
          <execution>
            <id>attach-source</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.myfaces.trinidadbuild</groupId>
        <artifactId>maven-xrts-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>generate-sources</goal>
              <goal>generate-test-sources</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
        
      <plugin>
        <artifactId>maven-remote-resources-plugin</artifactId>
        <version>1.0-alpha-6</version>
        <executions>
          <execution>
            <goals>
              <goal>process</goal>
            </goals>
            <configuration>
              <resourceBundles>
                <resourceBundle>org.apache:apache-jar-resource-bundle:1.3</resourceBundle>
              </resourceBundles>
              <properties>
                <addLicense>true</addLicense>
              </properties>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <reporting>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>findbugs-maven-plugin</artifactId>
        <version>2.0</version>
        <configuration>
          <threshold>Low</threshold>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>rat-maven-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-project-info-reports-plugin</artifactId>
        <version>2.0.1</version>
      </plugin>

      <plugin>
        <artifactId>maven-pmd-plugin</artifactId>
        <version>2.3</version>
        <configuration>
          <rulesets>
            <ruleset>/rulesets/basic.xml</ruleset>
            <ruleset>/rulesets/unusedcode.xml</ruleset>
          </rulesets>
          <linkXref>true</linkXref>
          <minimumTokens>100</minimumTokens>
          <targetJdk>${jdk.version}</targetJdk>
        </configuration>
      </plugin>
    </plugins>
  </reporting>

  <profiles>
    <!--
      This profile builds the examples when NOT performing a release.  Execute this profile
      by making sure that there is no -DperformRelease property on the maven command.  If
      there is, it may manually be invoked by adding a -PbuildExamples.
    -->
    <profile>
      <id>buildExamples</id>
      <activation>
        <property>
          <name>!performRelease</name>
        </property>
      </activation>
      
      <modules>
        <module>trinidad-examples</module>
      </modules>
    </profile>

    <profile>
      <id>partial-lifecycle</id>
      <modules>
        <module>trinidad-partial-lifecycle</module>
      </modules>
    </profile>

    <!-- 
      This profile is for preparing a release.  Execute this profile like this:
      
      mvn release:prepare -DprepareRelease=true
    -->
    <profile>
      <id>prepare-release</id>

      <activation>
        <property>
          <name>prepareRelease</name>
        </property>
      </activation>
           
      <modules>
        <module>trinidad-assembly</module>
        <module>trinidad-sandbox</module>
      </modules>
    </profile>

    <!-- 
      This profile is for building the release artifacts for review.  Execute this profile 
      like this:
      
      mvn clean source:jar install deploy -DaltDeploymentRepository=matzew::default::file://FOLDER -DperformRelease=true
      
      Issuing this command will also perform the "sign-artifacts" profile from the master pom.
    -->
    <profile>
      <id>release</id>
      <activation>
        <property>
          <name>performRelease</name>
          <value>true</value>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-javadoc-plugin</artifactId>
            <configuration>
              <excludePackageNames>org.apache.myfaces.trinidadinternal.*</excludePackageNames>
            </configuration>
            <executions>
              <execution>
                <id>attach-javadocs</id>
                <goals>
                  <goal>jar</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-scm-plugin</artifactId>
            <executions>
              <execution>
                <phase>validate</phase>
                <id>getting-scm.revision</id>
                <goals>
                  <goal>update</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!--
      This profile enables asserts in the surefire tests. Do not use this with Maven 2.0.6 or
      you will get an error.  Execute this profile like this:
      
      mvn install -PenableAssert
    -->
    <profile>
      <id>enableAssert</id>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
            <artifactId>maven-surefire-plugin</artifactId>
              <inherited>true</inherited>
              <configuration>
                <forkMode>once</forkMode>
                <argLine>-enableassertions</argLine>
                <parallel>false</parallel>
              </configuration>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>
    
    <!--
      This marks the JSF libraries for inclusion into the example projects.  Execute this profile
      like this:
      
      mvn install -PincludeJSF
    -->    
    <profile>
      <id>includeJSF</id>
      <dependencyManagement>
        <dependencies>
          <dependency>
            <groupId>javax.faces</groupId>
            <artifactId>jsf-api</artifactId>
            <version>${jsf-ri.version}</version>
            <scope>compile</scope>
          </dependency>

          <dependency>
            <groupId>javax.faces</groupId>
            <artifactId>jsf-impl</artifactId>
            <version>${jsf-ri.version}</version>
            <scope>runtime</scope>
          </dependency>

          <dependency>
            <groupId>org.apache.myfaces.core</groupId>
            <artifactId>myfaces-api</artifactId>
            <version>${jsf-myfaces.version}</version>
            <scope>compile</scope>
          </dependency>

          <dependency>
            <groupId>org.apache.myfaces.core</groupId>
            <artifactId>myfaces-impl</artifactId>
            <version>${jsf-myfaces.version}</version>
            <scope>runtime</scope>
          </dependency>
        </dependencies>
      </dependencyManagement>
    </profile>
    
    <!--
      This marks the JSTL libraries for inclusion into the example projects.  Execute this profile
      like this:
      
      mvn install -PincludeJSTL
    -->
    <profile>
      <id>includeJSTL</id>
      <dependencyManagement>
        <dependencies>
          <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
            <version>${jstl.version}</version>
            <scope>compile</scope>
          </dependency>
        </dependencies>
      </dependencyManagement>
    </profile>
    
    <!--
      This marks the Bridge libraries for inclusion into the example projects.  Execute this profile
      like this:
      
      mvn install -PincludeBridge
    -->
    <profile>
      <id>includeBridge</id>
      <dependencyManagement>
        <dependencies>
          <dependency>
            <groupId>org.apache.myfaces.portlet-bridge</groupId>
            <artifactId>portlet-bridge-api</artifactId>
            <version>${portlet-bridge.version}</version>
            <scope>compile</scope>
          </dependency>
      
          <dependency>
            <groupId>org.apache.myfaces.portlet-bridge</groupId>
            <artifactId>portlet-bridge-impl</artifactId>
            <version>${portlet-bridge.version}</version>
            <scope>runtime</scope>
          </dependency>
        </dependencies>
      </dependencyManagement>      
    </profile>

    <!-- allow people that use Java6 (or above) as their default JRE to specify
      a Java5 home in their maven settings.xml. This makes the javac
      run from that location (forked). This will fail if running on
      Java6 without the Java5 home set. This only affects the compiler,
      all tests and other maven plugins will still run it the active
      JDK (java6). The property that is needed is "jdk5.home"
      
      Example usage in your settings.xml:
<settings>
  <profiles>
    <profile>
      <id>java5.home</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <properties>
        <jdk5.home>/usr/lib/jvm/java-1.5.0-sun</jdk5.home>
      </properties>
    </profile>
  </profiles>
</settings>
      -->
    <profile>
      <id>java5compilerFor6</id>
      <activation>
        <jdk>1.6</jdk>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <inherited>true</inherited>
            <configuration>
              <fork>true</fork>
              <executable>${jdk5.home}/bin/javac</executable>
              <compilerVersion>${jdk.version}</compilerVersion>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <!-- repeat for JDK 1.7 -->
    <profile>
      <id>java5compilerFor7</id>
      <activation>
        <jdk>1.7</jdk>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <inherited>true</inherited>
            <configuration>
              <fork>true</fork>
              <executable>${jdk5.home}/bin/javac</executable>
              <compilerVersion>${jdk.version}</compilerVersion>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
