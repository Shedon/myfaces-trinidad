<?xml version="1.0" encoding="utf-8"?>
<!--
  Copyright 2006 The Apache Software Foundation.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<faces-config version="1.2" xmlns="http://java.sun.com/xml/ns/javaee"
              xmlns:af="http://myfaces.apache.org/trinidad"
              xmlns:mfp="http://myfaces.apache.org/maven-faces-plugin"
              xmlns:xi="http://www.w3.org/2001/XInclude">
  <component>
    <description><![CDATA[The panelForm lays out input form controls, such that their labels and fields line up vertically.  The children of this component are input controls, they are inputText, inputHidden, inputFile, selectInputColor, selectInputText, selectInputDate, selectBooleanCheckBox, selectBooleanRadio, selectOneChoice, selectOneListBox, selectOneRadio, selectManyListBox and panelLabelAndMessage.  These components must have their "simple" attribute set to false (the default).  For cases where other controls are required inside panelForm, wrap them in a panelLabelAndMessage.

This component can be used to lay out multiple columns using the rows attribute.  The children are laid out down and then across.  Note that this layout is not a table layout so there is no overall table row.  Instead, rows are unique per column; in one column a row may consume more vertical space than a nearby row in another column.

The panelForm is an example of one of the components that has support for grouping its children components.
If you place panelForm child items inside of a group, separators will be drawn around the group of form items if adjacent to other form items (separators won't be drawn at the top if the group is the first item in the column or, similarly, at the bottom if the group is the last item in the column).
Grouped panelForm items are kept in the same column of the panelForm even when the assigned rows attribute is set to a value smaller than the number of items in the group.
The panelForm component also supports the group component in its footer facet so you can place more than one item in the footer.  You can even group footer items one additional time to get separators to appear.]]></description>
    <icon>
      <small-icon>/org/apache/myfaces/trinidad/metadata/icons/panelForm.png</small-icon>
    </icon>
    <component-type>org.apache.myfaces.trinidad.CorePanelForm</component-type>
    <component-class>org.apache.myfaces.trinidad.component.core.layout.CorePanelForm</component-class>

    <facet>
      <description><![CDATA[This facet is rendered under the columns and usually contains a panelButtonBar.
             <p>
This facet may not always line up perfectly, especially if the labels or fields are longer than expected.  Try adjusting things with the labelWidth and fieldWidth attributes when necessary.  Also, the columns attribute on inputText may be helpful.
             </p>]]>
      </description>
      <facet-name>footer</facet-name>
      <facet-extension>
        <mfp:facet-metadata>
          <mfp:preferred>true</mfp:preferred>
          <mfp:preferred-children>af:panelButtonBar</mfp:preferred-children>
        </mfp:facet-metadata>
      </facet-extension>
    </facet>

    <xi:include href="includes/CommonAttrs.xml" xpointer="/faces-config/component/*"/>
    <xi:include href="includes/CoreJSEvents.xml" xpointer="/faces-config/component/*"/>

    <property>
      <description><![CDATA[The preferred width of the field.  Usually a percentage, but may be specified as either a percentage or an absolute number of pixels.  If the width is not specified, it will default appropriately.  If specified as a percentage the labelWidth plus the fieldWidth should add up to 100%, regardless of the number of columns.  If the fieldWidth is specified and is a percentage the labelWidth will be derived appropriately if not specified.]]></description>
      <property-name>fieldWidth</property-name>
      <property-class>java.lang.String</property-class>
      <property-extension>
        <mfp:property-metadata>
          <mfp:preferred>true</mfp:preferred>
        </mfp:property-metadata>
        <mfp:unsupported-agents>phone voice</mfp:unsupported-agents>
      </property-extension>
    </property>
    <property>
      <description><![CDATA[The preferred width of the label.  Usually a percentage, but may be specified as either a percentage or an absolute number of pixels.  If the width is not specified, it will default appropriately.  If specified as a percentage the labelWidth plus the fieldWidth should add up to 100%, regardless of the number of columns.  If the labelWidth is specified and is a percentage the fieldWidth will be derived appropriately if not specified.]]></description>
      <property-name>labelWidth</property-name>
      <property-class>java.lang.String</property-class>
      <property-extension>
        <mfp:property-metadata>
          <mfp:preferred>true</mfp:preferred>
        </mfp:property-metadata>
        <mfp:unsupported-agents>phone voice</mfp:unsupported-agents>
      </property-extension>
    </property>
    <property>
      <description><![CDATA[Sets the maximum number of columns to show.  This attribute defaults to 3 and 2 on PDAs.  If this panelForm is inside of another panelForm, this will always be 1.]]></description>
      <property-name>maxColumns</property-name>
      <property-class>int</property-class>
      <property-extension>
        <mfp:property-metadata>
          <mfp:preferred>true</mfp:preferred>
        </mfp:property-metadata>
        <mfp:property-editor>UNSIGNED_INTEGER</mfp:property-editor>
        <mfp:unsupported-agents>phone voice</mfp:unsupported-agents>
      </property-extension>
    </property>
    <property>
      <description><![CDATA[Sets the number of rows after which to start a new column.  This attribute defaults to Integer.MAX_VALUE.  The number of rows actually rendered depends also on the "maxColumns" property.  If the children will not fit in the given number of rows and columns, the number of rows will increase to accomodate the children.]]>
      </description>
      <property-name>rows</property-name>
      <property-class>int</property-class>
      <property-extension>
        <mfp:property-metadata>
          <mfp:preferred>true</mfp:preferred>
        </mfp:property-metadata>
        <mfp:property-editor>UNSIGNED_INTEGER</mfp:property-editor>
        <mfp:unsupported-agents>phone voice</mfp:unsupported-agents>
      </property-extension>
    </property>

    <component-extension>
      <mfp:component-supertype>org.apache.myfaces.trinidad.Panel</mfp:component-supertype>
      <mfp:renderer-type>org.apache.myfaces.trinidad.Form</mfp:renderer-type>
      <mfp:tag-name>af:panelForm</mfp:tag-name>
      <mfp:tag-class>org.apache.myfaces.trinidadinternal.taglib.core.layout.CorePanelFormTag</mfp:tag-class>
      <mfp:long-description><![CDATA[<html:p>          
           The panelForm lays out input form controls, such that their
           labels and fields line up vertically.  It supports multiple
           columns, and also supports a footer facet.
          </html:p>
          <html:p>
           Usually, this component will simply contain labelled ADF Faces input
           components in its main content - these are inputText, inputFile,
           selectInputColor, selectInputText, selectInputDate,
           selectBooleanCheckBox, selectBooleanRadio, selectOneChoice,
           selectOneListBox, selectOneRadio, and
           selectManyListBox.  These components must have
           their &quot;simple&quot; attribute set to false, which is the default,
           and will cause the labels and fields inside the panelForm
           to be aligned vertically.
          </html:p>
          <html:p>
           When more complex field contents are needed, use
           a panelLabelAndMessage around the more complex contents
           needed;  see the example below.
          </html:p>
          <html:p>
           Other components can be added to panelForm, but they
           will not line up with labels and fields automatically,
           and each will appear on its own row.
           You can use other panel components - like panelHorizontal -
           to get some level of layout within a row, but to align
           contents with the other labels and fields, use panelLabelAndMessage
           or the &quot;footer&quot; facet.
          </html:p>
          <html:p>
           The panelForm is an example of one of the components that has support
           for grouping its children components.
           If you place panelForm child items inside of a group, separators will
           be drawn around the group of form items if adjacent to other form items
           (separators won't be drawn at the top if the group is the first item in
           the column or, similarly, at the bottom if the group is the last item
           in the column).
           Grouped panelForm items are kept in the same column of the panelForm
           even when the assigned rows attribute is set to a value smaller than
           the number of items in the group.
           The panelForm component also supports the group component in its footer
           facet so you can place more than one item in the footer.  You can even
           group footer items one additional time to get separators to appear.
          </html:p>]]>
      </mfp:long-description>
      <mfp:example>
        <mfp:source-code><![CDATA[<af:panelForm rows="6" labelWidth="40%">
    <!-- A bunch of form components -->
    <af:inputText label="Text"/>
    <af:inputFile label="File"/>
    <af:selectInputText label="SelectInput"/>
    <af:selectInputDate label="Date"/>
    <af:inputText label="Attribute"/>
    <af:inputText label="Attribute"/>
    <af:inputText label="Attribute"/>
    <af:inputText label="Attribute"/>

    <!-- Now, an example of panelLabelAndMessage for more complex content -->
    <af:panelLabelAndMessage label="Date Range">
      <af:panelHorizontal>
        <af:selectInputDate simple="true" shortDesc="Start date"/>
        <af:selectInputDate simple="true" shortDesc="End date"/>
      </af:panelHorizontal>
    </af:panelLabelAndMessage>
    <f:facet name="footer">
      <af:panelButtonBar>
        <af:commandButton text="Button 1"/>
        <af:commandButton text="Button 2"/>
      </af:panelButtonBar>
    </f:facet>      
</af:panelForm>]]>
        </mfp:source-code>
      </mfp:example>
      <mfp:author>Gabrielle Crawford</mfp:author>
      <mfp:component-metadata>
        <mfp:group>${md:getTranslatedString("PALETTE_LAYOUT")}</mfp:group>
        <mfp:preferred-children>af:inputText af:inputHidden af:inputFile af:selectBooleanCheckBox
          af:selectBooleanRadio af:selectInputColor af:selectInputDate
          af:selectInputText af:selectManyListBox af:selectOneChoice 
          af:selectOneRadio af:panelLabelAndMessage
        </mfp:preferred-children>
      </mfp:component-metadata>
      <mfp:uix2-local-name>messageComponentLayout</mfp:uix2-local-name>
    </component-extension>
  </component>
</faces-config>
