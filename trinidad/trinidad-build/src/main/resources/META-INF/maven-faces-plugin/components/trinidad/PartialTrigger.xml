<?xml version="1.0" encoding="utf-8"?>
<!--
    Licensed to the Apache Software Foundation (ASF) under one
    or more contributor license agreements.  See the NOTICE file
    distributed with this work for additional information
    regarding copyright ownership.  The ASF licenses this file
    to you under the Apache License, Version 2.0 (the
    "License"); you may not use this file except in compliance
    with the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.
	   
-->
<faces-config version="1.2" xmlns="http://java.sun.com/xml/ns/javaee"
              xmlns:tr="http://myfaces.apache.org/trinidad"
              xmlns:xi="http://www.w3.org/2001/XInclude"
              xmlns:mfp="http://myfaces.apache.org/maven-faces-plugin"
              xmlns:mafp="http://myfaces.apache.org/maven-trinidad-plugin"
              xmlns:xhtml="http://www.w3.org/1999/xhtml">
  <component>
    <description><![CDATA[Component that provides partialTriggers, partialTargets and immediate
event broadcasting of events for PPR]]></description>
    <icon>
      <small-icon>/org/apache/myfaces/trinidad/metadata/icons/partialTrigger.png</small-icon>
    </icon>
    <component-type>org.apache.myfaces.trinidad.PartialTrigger</component-type>
    <component-class>org.apache.myfaces.trinidad.component.UIXPartialTrigger</component-class>
    <property>
      <description><![CDATA[whether broadcasting of partial trigger events should be
immediate.

When immediate is true, all the PartialTriggerEvent events queued by this component will
be marked with the 'ANY' JSF phase ID. This will cause the event to be broadcast at the
end of the current phase. This makes it possible to perform partial triggering of components
before the phase that the triggering component's event. For example, a UIXCommand will typically
queue an ActionEvent with a phase of INVOKE_APPLICATION. If a partial trigger with 
immediate set to true is a parent component, listeners to the partial trigger will be queued for
re-rendering during the APPLY_REQUEST_VALUES phase instead of INVOKE_APPLICATION.]]>
      </description>
      <property-name>immediate</property-name>
      <property-class>boolean</property-class>
    </property>
    <property>
      <description><![CDATA[the IDs of the components that should trigger a partial update.
        This component will listen on the trigger components. If one of the
        trigger components receives an event that will cause it to update
        in some way, this component will request to be updated too.
        Identifiers are relative to the source component, and must account for
        NamingContainers.  If your component is already inside of a naming
        container, you can use a single colon to start the search from the root,
        or multiple colons to move up through the NamingContainers - "::" will
        search from the parent naming container, ":::" will search
        from the grandparent naming container, etc. ]]>
      </description>
      <property-name>partialTriggers</property-name>
      <property-class>java.lang.String[]</property-class>
      <property-extension>
        <mfp:property-metadata>
          <mfp:preferred>true</mfp:preferred>
        </mfp:property-metadata>
      </property-extension>
    </property>
    <property>
      <description><![CDATA[the IDs of the components that should be triggered
        by a partial update.
        
        This component will trigger the partial update of all of these
        components if an event is broadcast by this component. 
        Identifiers are relative to the source component, and must account for
        NamingContainers.  If your component is already inside of a naming
        container, you can use a single colon to start the search from the root,
        or multiple colons to move up through the NamingContainers - "::" will
        search from the parent naming container, ":::" will search
        from the grandparent naming container, etc. ]]>
      </description>
      <property-name>partialTargets</property-name>
      <property-class>java.lang.String[]</property-class>
    </property>
    <component-extension>
      <mfp:component-family>org.apache.myfaces.trinidad.PartialTrigger</mfp:component-family>
      <mfp:component-supertype>org.apache.myfaces.trinidad.ComponentBase</mfp:component-supertype>
      <mfp:component-superclass>org.apache.myfaces.trinidad.component.UIXComponentBase</mfp:component-superclass>
      <mfp:tag-name>tr:partialTrigger</mfp:tag-name>
      <mfp:tag-class>org.apache.myfaces.trinidadinternal.taglib.UIXPartialTriggerTag</mfp:tag-class>
      <mfp:long-description><![CDATA[<html><p>UIXPartialTrigger is a component that provides integration
with the PPR functionality of Trinidad. It supports three main use cases.</p>
<ol>
<li>partialTriggers is supported. Being used as a parent component of several other components,
it is able to trigger partial rendering if any of its children broadcast an event.</li>
<li>partialTargets provides a way to force other components to be updated when a child component
broadcasts an event.</li>
<li>the ability to have the trigger happen immediately. Setting the immediate attribute to true
will cause an event to be queued with the 'ANY' phase ID, executing the functionality at the
end of the current phase</li>
</ol>
<p>This component does not render anything, it is used only for PPR integration.</p></html>
]]>
      </mfp:long-description>
      <mfp:author>Andrew Robinson</mfp:author>
    </component-extension>
  </component>
</faces-config>